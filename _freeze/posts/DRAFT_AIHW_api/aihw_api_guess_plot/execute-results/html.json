{
  "hash": "70f766a07183434a4d88d6d5b639ef81",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Accessing national health data via API\"\nauthor: \"Dr Matt Cooper and Dr Haileab Wolde\"\ndate: \"2025-10-20\"\nformat:\n  html:\n    code-fold: true\n    tabset: true\n    toc: true\n    toc-location: left\n    grid:\n      sidebar-width: 220px  # default 250px\n      body-width: 800px  # default 800 px\n      margin-width: 280px    # default 250px    \ncategories:\n  - R\n  - Output\n  - Quarto\ndraft: true\neditor_options: \n  chunk_output_type: console\nexecute:\n  echo: false\n  warning: false \nfig-align: center\nfig-format: png\nfig-cap-align: center\ntbl-cap-location: bottom\nfig-title: \"\"\ncss: _extensions/html/styles.css\n---\n\n\n\n# Overview\n\nDid you know, the [Australian Institute of Health and Welfare](https://www.aihw.gov.au/) (AIHW) is a treasure trove of **available** health data? \n\nThe AIHW works with a range of stakeholders from across Australia to carry out high-quality research covering a broad range of health domains; they also produce a many reports a year providing context to the state of the nation's health. While the data that supports these reports is often available for download from their websites *(.xslx, .csv)*, a range of the data can can also by accessed via Application Programming Interface (API). The [MyHospitals API](https://www.aihw.gov.au/hospitals/other-resources/myhospitals-api) opens the door to automated, real-time access, and offers much greater flexibility in how you explore and analysis the data. \n\nIn this post, we’ll demonstrate - as an example - how to access emergency department presentation (ED) data for major hospitals here in Western Australia, process it in R, and create an insightful visualisation.\n\n![All 4 Guess The Plots Together](images/all4.png){#fig-source width=\"100%\" align=\"center\"}\n\n![The final plot](images/fig4.png){#fig-source width=\"100%\" align=\"center\"}\n\n# Diving in!\n\nThere are many ways to access data via API using R, you might look to combine the [httr](https://cran.r-project.org/web/packages/httr/index.html) package with the [jsonlite](https://cran.r-project.org/web/packages/jsonlite/index.html) package to build your own query. However, we're going to leverage the great work that has already been done in the [readaihw](https://cran.r-project.org/package=readaihw%22) to dive right in without too technical from a data request and restructuring perspective. With just a few steps, we've got the data we were after!\n\n1. Load our package and the `readaihw` package [(installed from github)](https://github.com/RWParsons/readaihw).\n2. Use the `read_flat_data_extract()` to source the `\"MYH-ED\"` \n3. Use the `get_hospital_mappings()` function to source metadata for the hospitals; then reducing this dataset to just what we're interested in\n4. Some further data processing (filtering, variable manipulation, aggregation) prior to joining the two datasets together.\n\n*Expanding on these four steps above. In Step 2, we use the `read_flat_data_extract()` function from [readaihw](https://cran.r-project.org/package=readaihw%22) package to retrieve ED presentation data for hospitals in Western Australia. This function simplifies API access and returns a tidy data frame ready for analysis. The `MYH-ED` code is what specifies that we are. asking for the monthly ED presentation counts across hospitals in Australia. Other key columns in this dataset include: `reporting_unit_code` - Unique hospital identifier, `date` – Month and year of the record, `value` – Number of ED presentations. In Step 2, while the returned API call includes data from many other hospitals and locations, we just want to focus on key metropolitan hospitals in Western Australia, so we filter the dataset using hospital codes and names. We also join geographic coordinates to each hospital so we can later include inset maps.*\n\n*This gave us a clean dataset ready for plotting and mapping.*\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"show\"}\n# Step 1\nlibrary(thekidsbiostats)\nlibrary(readaihw)\n\n# Step 2\ned_presentations <- read_flat_data_extract(\"MYH-ED\")\n\n# Step 3\nmsh_hospital_codes <- get_hospital_mappings() |>\n  filter(state == \"Western Australia\",\n         type == \"Hospital\") |>\n  filter(name %in% c(\"Perth Children's Hospital\",\n             \"Fiona Stanley Hospital\",\n             \"Sir Charles Gairdner Hospital\",\n             \"Joondalup Health Campus (Public)\",\n             \"Royal Perth Hospital Wellington Street Campus\")) |>\n  select(code, latitude, longitude)\n\n# Step 4\nmy_aihw_dat <- ed_presentations |>\n  filter(reporting_unit_code %in% msh_hospital_codes$code) |>\n  select(reporting_unit_code, \n         date = reporting_end_date, \n         hospital = reporting_unit_name, \n         value) |>\n  mutate(value = as.numeric(value), date = lubridate::ymd(date)) |>\n  group_by(hospital, date) |> \n  summarize(count = sum(value, na.rm = TRUE),\n            code = reporting_unit_code[1]) %>% \n  left_join(msh_hospital_codes, by = join_by(code == code))\n\n# Let's have a look  \nmy_aihw_dat |> \n  head(10) |> \n  thekids_table(colour = \"AzureBlue\")\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"tabwid\"><style>.cl-56fbb504{table-layout:auto;}.cl-56f821be{font-family:'Barlow';font-size:11pt;font-weight:bold;font-style:normal;text-decoration:none;color:rgba(255, 255, 255, 1.00);background-color:transparent;}.cl-56f821d2{font-family:'Barlow';font-size:10pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(17, 25, 33, 1.00);background-color:transparent;}.cl-56f99c56{margin:0;text-align:left;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:2.5pt;padding-top:2.5pt;padding-left:2.5pt;padding-right:2.5pt;line-height: 1.5;background-color:transparent;}.cl-56f99c60{margin:0;text-align:right;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:2.5pt;padding-top:2.5pt;padding-left:2.5pt;padding-right:2.5pt;line-height: 1.5;background-color:transparent;}.cl-56f9ab1a{background-color:rgba(66, 110, 168, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-56f9ab1b{background-color:rgba(66, 110, 168, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-56f9ab24{background-color:rgba(66, 110, 168, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-56f9ab25{background-color:rgba(66, 110, 168, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-56f9ab26{background-color:rgba(66, 110, 168, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-56f9ab2e{background-color:rgba(66, 110, 168, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-56f9ab2f{background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-56f9ab30{background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-56f9ab38{background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-56f9ab39{background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-56f9ab3a{background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-56f9ab3b{background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-56f9ab42{background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-56f9ab43{background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-56f9ab44{background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-56f9ab45{background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-56f9ab4c{background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-56f9ab4d{background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}</style><table data-quarto-disable-processing='true' class='cl-56fbb504'><thead><tr style=\"overflow-wrap:break-word;\"><th class=\"cl-56f9ab1a\"><p class=\"cl-56f99c56\"><span class=\"cl-56f821be\">hospital</span></p></th><th class=\"cl-56f9ab1b\"><p class=\"cl-56f99c56\"><span class=\"cl-56f821be\">date</span></p></th><th class=\"cl-56f9ab24\"><p class=\"cl-56f99c60\"><span class=\"cl-56f821be\">count</span></p></th><th class=\"cl-56f9ab25\"><p class=\"cl-56f99c56\"><span class=\"cl-56f821be\">code</span></p></th><th class=\"cl-56f9ab26\"><p class=\"cl-56f99c56\"><span class=\"cl-56f821be\">latitude</span></p></th><th class=\"cl-56f9ab2e\"><p class=\"cl-56f99c56\"><span class=\"cl-56f821be\">longitude</span></p></th></tr></thead><tbody><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-56f9ab2f\"><p class=\"cl-56f99c56\"><span class=\"cl-56f821d2\">Fiona Stanley Hospital</span></p></td><td class=\"cl-56f9ab30\"><p class=\"cl-56f99c56\"><span class=\"cl-56f821d2\">2015‑06‑30</span></p></td><td class=\"cl-56f9ab38\"><p class=\"cl-56f99c60\"><span class=\"cl-56f821d2\">39571</span></p></td><td class=\"cl-56f9ab39\"><p class=\"cl-56f99c56\"><span class=\"cl-56f821d2\">H0746</span></p></td><td class=\"cl-56f9ab3a\"><p class=\"cl-56f99c56\"><span class=\"cl-56f821d2\">‑32.070120</span></p></td><td class=\"cl-56f9ab3b\"><p class=\"cl-56f99c56\"><span class=\"cl-56f821d2\">115.846909</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-56f9ab2f\"><p class=\"cl-56f99c56\"><span class=\"cl-56f821d2\">Fiona Stanley Hospital</span></p></td><td class=\"cl-56f9ab30\"><p class=\"cl-56f99c56\"><span class=\"cl-56f821d2\">2016‑06‑30</span></p></td><td class=\"cl-56f9ab38\"><p class=\"cl-56f99c60\"><span class=\"cl-56f821d2\">103234</span></p></td><td class=\"cl-56f9ab39\"><p class=\"cl-56f99c56\"><span class=\"cl-56f821d2\">H0746</span></p></td><td class=\"cl-56f9ab3a\"><p class=\"cl-56f99c56\"><span class=\"cl-56f821d2\">‑32.070120</span></p></td><td class=\"cl-56f9ab3b\"><p class=\"cl-56f99c56\"><span class=\"cl-56f821d2\">115.846909</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-56f9ab2f\"><p class=\"cl-56f99c56\"><span class=\"cl-56f821d2\">Fiona Stanley Hospital</span></p></td><td class=\"cl-56f9ab30\"><p class=\"cl-56f99c56\"><span class=\"cl-56f821d2\">2017‑06‑30</span></p></td><td class=\"cl-56f9ab38\"><p class=\"cl-56f99c60\"><span class=\"cl-56f821d2\">101901</span></p></td><td class=\"cl-56f9ab39\"><p class=\"cl-56f99c56\"><span class=\"cl-56f821d2\">H0746</span></p></td><td class=\"cl-56f9ab3a\"><p class=\"cl-56f99c56\"><span class=\"cl-56f821d2\">‑32.070120</span></p></td><td class=\"cl-56f9ab3b\"><p class=\"cl-56f99c56\"><span class=\"cl-56f821d2\">115.846909</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-56f9ab2f\"><p class=\"cl-56f99c56\"><span class=\"cl-56f821d2\">Fiona Stanley Hospital</span></p></td><td class=\"cl-56f9ab30\"><p class=\"cl-56f99c56\"><span class=\"cl-56f821d2\">2018‑06‑30</span></p></td><td class=\"cl-56f9ab38\"><p class=\"cl-56f99c60\"><span class=\"cl-56f821d2\">107041</span></p></td><td class=\"cl-56f9ab39\"><p class=\"cl-56f99c56\"><span class=\"cl-56f821d2\">H0746</span></p></td><td class=\"cl-56f9ab3a\"><p class=\"cl-56f99c56\"><span class=\"cl-56f821d2\">‑32.070120</span></p></td><td class=\"cl-56f9ab3b\"><p class=\"cl-56f99c56\"><span class=\"cl-56f821d2\">115.846909</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-56f9ab2f\"><p class=\"cl-56f99c56\"><span class=\"cl-56f821d2\">Fiona Stanley Hospital</span></p></td><td class=\"cl-56f9ab30\"><p class=\"cl-56f99c56\"><span class=\"cl-56f821d2\">2019‑06‑30</span></p></td><td class=\"cl-56f9ab38\"><p class=\"cl-56f99c60\"><span class=\"cl-56f821d2\">110553</span></p></td><td class=\"cl-56f9ab39\"><p class=\"cl-56f99c56\"><span class=\"cl-56f821d2\">H0746</span></p></td><td class=\"cl-56f9ab3a\"><p class=\"cl-56f99c56\"><span class=\"cl-56f821d2\">‑32.070120</span></p></td><td class=\"cl-56f9ab3b\"><p class=\"cl-56f99c56\"><span class=\"cl-56f821d2\">115.846909</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-56f9ab2f\"><p class=\"cl-56f99c56\"><span class=\"cl-56f821d2\">Fiona Stanley Hospital</span></p></td><td class=\"cl-56f9ab30\"><p class=\"cl-56f99c56\"><span class=\"cl-56f821d2\">2020‑06‑30</span></p></td><td class=\"cl-56f9ab38\"><p class=\"cl-56f99c60\"><span class=\"cl-56f821d2\">105122</span></p></td><td class=\"cl-56f9ab39\"><p class=\"cl-56f99c56\"><span class=\"cl-56f821d2\">H0746</span></p></td><td class=\"cl-56f9ab3a\"><p class=\"cl-56f99c56\"><span class=\"cl-56f821d2\">‑32.070120</span></p></td><td class=\"cl-56f9ab3b\"><p class=\"cl-56f99c56\"><span class=\"cl-56f821d2\">115.846909</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-56f9ab2f\"><p class=\"cl-56f99c56\"><span class=\"cl-56f821d2\">Fiona Stanley Hospital</span></p></td><td class=\"cl-56f9ab30\"><p class=\"cl-56f99c56\"><span class=\"cl-56f821d2\">2021‑06‑30</span></p></td><td class=\"cl-56f9ab38\"><p class=\"cl-56f99c60\"><span class=\"cl-56f821d2\">110029</span></p></td><td class=\"cl-56f9ab39\"><p class=\"cl-56f99c56\"><span class=\"cl-56f821d2\">H0746</span></p></td><td class=\"cl-56f9ab3a\"><p class=\"cl-56f99c56\"><span class=\"cl-56f821d2\">‑32.070120</span></p></td><td class=\"cl-56f9ab3b\"><p class=\"cl-56f99c56\"><span class=\"cl-56f821d2\">115.846909</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-56f9ab2f\"><p class=\"cl-56f99c56\"><span class=\"cl-56f821d2\">Fiona Stanley Hospital</span></p></td><td class=\"cl-56f9ab30\"><p class=\"cl-56f99c56\"><span class=\"cl-56f821d2\">2022‑06‑30</span></p></td><td class=\"cl-56f9ab38\"><p class=\"cl-56f99c60\"><span class=\"cl-56f821d2\">112678</span></p></td><td class=\"cl-56f9ab39\"><p class=\"cl-56f99c56\"><span class=\"cl-56f821d2\">H0746</span></p></td><td class=\"cl-56f9ab3a\"><p class=\"cl-56f99c56\"><span class=\"cl-56f821d2\">‑32.070120</span></p></td><td class=\"cl-56f9ab3b\"><p class=\"cl-56f99c56\"><span class=\"cl-56f821d2\">115.846909</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-56f9ab2f\"><p class=\"cl-56f99c56\"><span class=\"cl-56f821d2\">Fiona Stanley Hospital</span></p></td><td class=\"cl-56f9ab30\"><p class=\"cl-56f99c56\"><span class=\"cl-56f821d2\">2023‑06‑30</span></p></td><td class=\"cl-56f9ab38\"><p class=\"cl-56f99c60\"><span class=\"cl-56f821d2\">107770</span></p></td><td class=\"cl-56f9ab39\"><p class=\"cl-56f99c56\"><span class=\"cl-56f821d2\">H0746</span></p></td><td class=\"cl-56f9ab3a\"><p class=\"cl-56f99c56\"><span class=\"cl-56f821d2\">‑32.070120</span></p></td><td class=\"cl-56f9ab3b\"><p class=\"cl-56f99c56\"><span class=\"cl-56f821d2\">115.846909</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-56f9ab42\"><p class=\"cl-56f99c56\"><span class=\"cl-56f821d2\">Fiona Stanley Hospital</span></p></td><td class=\"cl-56f9ab43\"><p class=\"cl-56f99c56\"><span class=\"cl-56f821d2\">2024‑06‑30</span></p></td><td class=\"cl-56f9ab44\"><p class=\"cl-56f99c60\"><span class=\"cl-56f821d2\">111145</span></p></td><td class=\"cl-56f9ab45\"><p class=\"cl-56f99c56\"><span class=\"cl-56f821d2\">H0746</span></p></td><td class=\"cl-56f9ab4c\"><p class=\"cl-56f99c56\"><span class=\"cl-56f821d2\">‑32.070120</span></p></td><td class=\"cl-56f9ab4d\"><p class=\"cl-56f99c56\"><span class=\"cl-56f821d2\">115.846909</span></p></td></tr></tbody></table></div>\n```\n\n:::\n:::\n\n\n\n## Where did the `\"MYH-ED\"` code come from?\n\nGreat question! \n\nThere are many different variables that can be sourced. You can see a [descriptive list online](https://www.aihw.gov.au/about-our-data/our-data-collections), but we can also use th API (and some of those packages mentioned earlier) to import the list of codes directly into R!\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"show\"}\nlibrary(httr)\nlibrary(jsonlite)\n\nmeasures <- GET(\"https://myhospitalsapi.aihw.gov.au/api/v1/Measures\")\nmeasures <- content(measures, as = \"text\")\nmeasures <- fromJSON(measures, flatten = TRUE)\nmeasures$result |> \n  select(measure_code, measure_name) |> \n  head(10) |> \n  thekids_table(colour = \"AzureBlue\")\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"tabwid\"><style>.cl-57309152{table-layout:auto;}.cl-572d12ac{font-family:'Barlow';font-size:11pt;font-weight:bold;font-style:normal;text-decoration:none;color:rgba(255, 255, 255, 1.00);background-color:transparent;}.cl-572d12b6{font-family:'Barlow';font-size:10pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(17, 25, 33, 1.00);background-color:transparent;}.cl-572edf10{margin:0;text-align:left;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:2.5pt;padding-top:2.5pt;padding-left:2.5pt;padding-right:2.5pt;line-height: 1.5;background-color:transparent;}.cl-572eebf4{background-color:rgba(66, 110, 168, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-572eebfe{background-color:rgba(66, 110, 168, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 1pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-572eebff{background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-572eec00{background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-572eec01{background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-572eec08{background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-572eec09{background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-572eec12{background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}</style><table data-quarto-disable-processing='true' class='cl-57309152'><thead><tr style=\"overflow-wrap:break-word;\"><th class=\"cl-572eebf4\"><p class=\"cl-572edf10\"><span class=\"cl-572d12ac\">measure_code</span></p></th><th class=\"cl-572eebfe\"><p class=\"cl-572edf10\"><span class=\"cl-572d12ac\">measure_name</span></p></th></tr></thead><tbody><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-572eebff\"><p class=\"cl-572edf10\"><span class=\"cl-572d12b6\">MYH0001</span></p></td><td class=\"cl-572eec00\"><p class=\"cl-572edf10\"><span class=\"cl-572d12b6\">Number of surgeries for malignant cancer</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-572eec01\"><p class=\"cl-572edf10\"><span class=\"cl-572d12b6\">MYH0002</span></p></td><td class=\"cl-572eec08\"><p class=\"cl-572edf10\"><span class=\"cl-572d12b6\">Median waiting time for surgery for malignant cancer</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-572eec01\"><p class=\"cl-572edf10\"><span class=\"cl-572d12b6\">MYH0003</span></p></td><td class=\"cl-572eec08\"><p class=\"cl-572edf10\"><span class=\"cl-572d12b6\">Percentage of people who received surgery for malignant cancer within 30 days</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-572eec01\"><p class=\"cl-572edf10\"><span class=\"cl-572d12b6\">MYH0004</span></p></td><td class=\"cl-572eec08\"><p class=\"cl-572edf10\"><span class=\"cl-572d12b6\">Percentage of people who received surgery for malignant cancer within 45 days</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-572eec01\"><p class=\"cl-572edf10\"><span class=\"cl-572d12b6\">MYH0005</span></p></td><td class=\"cl-572eec08\"><p class=\"cl-572edf10\"><span class=\"cl-572d12b6\">Percentage of patients who depart the emergency department within four hours of arrival</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-572eebff\"><p class=\"cl-572edf10\"><span class=\"cl-572d12b6\">MYH0006</span></p></td><td class=\"cl-572eec00\"><p class=\"cl-572edf10\"><span class=\"cl-572d12b6\">Number of elective surgeries</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-572eec01\"><p class=\"cl-572edf10\"><span class=\"cl-572d12b6\">MYH0007</span></p></td><td class=\"cl-572eec08\"><p class=\"cl-572edf10\"><span class=\"cl-572d12b6\">Percentage of patients who waited longer than 365 days for elective surgery</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-572eec01\"><p class=\"cl-572edf10\"><span class=\"cl-572d12b6\">MYH0008</span></p></td><td class=\"cl-572eec08\"><p class=\"cl-572edf10\"><span class=\"cl-572d12b6\">Percentage of patients who received their surgery within clinically recommended times</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-572eec01\"><p class=\"cl-572edf10\"><span class=\"cl-572d12b6\">MYH0009</span></p></td><td class=\"cl-572eec08\"><p class=\"cl-572edf10\"><span class=\"cl-572d12b6\">Median waiting time for elective surgery</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-572eec09\"><p class=\"cl-572edf10\"><span class=\"cl-572d12b6\">MYH0010</span></p></td><td class=\"cl-572eec12\"><p class=\"cl-572edf10\"><span class=\"cl-572d12b6\">Percentage of patients who commenced treatment within the recommended time</span></p></td></tr></tbody></table></div>\n```\n\n:::\n:::\n\n\n\nFrom here, the world *(of AIHW MyHospital data)* is your Oyster!\n\n# Extended example - Guess. That. Plot!\n\nEvery so often, on one of our internal communication platforms, we'll do a little 'Guess That Plot' quiz. It's a fun way to Engage staff from around [our Institute](https://www.thekids.org.au/) in some conversation and critical thinking are data and visualisations. And it possibly goes without saying - the above plot is a recent example of one of these 'Guess That Plot' quizzes we did where we used AIHW data!\n\nThe code for this below!\n\n## But first, some notes ...\n\nFor a little something different, we inset a map of Perth into these plots with a marker for the *point of interest*. This involved using the [`ggmaps`](https://cran.r-project.org/web/packages/ggmap/index.html) package and [registering here](https://client.stadiamaps.com/signup/) at Stadia Maps for a free account to receive a `token` to allow us to access the map tile images. \n\nWe obviously can't share our token, the full `.qmd` for this post won't run until you update the code with your token. For that reason, we insert `.png.`'s of the figures that were saved earlier.\n\n*Now we will create a base map of the Perth area and define a function to generate small inset maps for hospitals. Each inset will mark a hospital’s location with a red star on the map. These inset maps can be added to other plots to visually show the exact location of each hospital, while keeping the map clean and free of axes or labels.*\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\nlibrary(ggmap)\nlibrary(patchwork)\n\nregister_stadiamaps(\"7ae597d3-556b-4f05-b2cf-837d3a978e67\", write = FALSE)\n# register_stadiamaps(\"YOUR-TOKEN-GOES-HERE\", write = FALSE)\n\n# Define the Perth area\nperth_bbox <- c(left = 115.65, bottom = -32.1, right = 115.95, top = -31.70)\n\n# Source the map tiles for the area we need\nperth_map <- get_stadiamap(\n  bbox = as.matrix(perth_bbox),\n  maptype = \"stamen_terrain_background\"\n)\n\n# Forma grob object of the map that we will reuse in each plot\ninset_map <- function(latitude, longitude) {\n  latitude <- as.numeric(latitude)\n  longitude <- as.numeric(longitude)\n  \n  ggplotGrob(\n    ggmap(perth_map) +\n      annotate(\"point\", x = longitude, y = latitude,\n        color = \"red\", size = 3, shape = 8) +\n      theme_void())}\n```\n:::\n\n\n\nIn addition:\n\n+  We use an `lapply` to `split` to iterate over the hospitals. Typically we might look to `map` or other functions from the `tidyverse`. **We acknowledge here that ai assisted with some of the code here.**\n+  We use `wrap_plots()` from the `patchwork` package to assemble the figures. We originally looked at using `facet_wrap()` (or similar) from the `ggplot2` package, but this proved quite challenging when incorporating the inset map with varying red X marker.\n+  We use white text on a white background, as opposed to `element_blank()` because it keeps all dimensions of the plots consisten as we work through the reveal! This is really important so plot elements don't change relative size and position!\n\n## Figure 1: Not much to go off!\n\nThis plot only shows the time series with both x and y-axis labels and hospital names are hidden, but perhaps the markings on the maps are a hint? Particularly if you remember which year certain hospitals opened?\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhospital_plots <- lapply(split(my_aihw_dat, my_aihw_dat$hospital), function(df) {\n  \n  lat <- df$latitude[1]\n  lon <- df$longitude[1]\n  \n  ts_plot <- ggplot(df, aes(date, count)) +\n    geom_line() +\n    geom_point() +\n    scale_y_continuous(labels = scales::label_comma(), limits = c(0, 120000)) +\n    scale_x_date(date_breaks = \"2 years\", date_labels = \"%Y\",\n                 limits = c(as.Date(\"2013-01-01\"), as.Date(\"2024-12-31\"))) +\n    theme_thekids() +\n    theme(axis.line = element_line(),\n          axis.ticks = element_line(),\n          axis.text = element_text(colour = \"white\")) +\n    labs(x = NULL, y = \" \", title = \" \")\n  \n  ts_plot + inset_element(\n    inset_map(lat, lon),\n    left = 0.8, right = 1,\n    bottom = 0.02, top = 0.55\n  ) \n})\n\nfig1 <- wrap_plots(hospital_plots, ncol = 2) +\n  plot_annotation(caption = \" \")\n```\n:::\n\n\n\n![Reveal 1](images/fig1.png){#fig-source width=\"80%\" align=\"center\"}\n\n## Figure 2: Time Series with X-axis Labels\n\nSimilar to Plot 1, but the x-axis labels are visible, allowing the timeline to be interpreted while keeping the y-axis subtle.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhospital_plots <- lapply(split(my_aihw_dat, my_aihw_dat$hospital), function(df) {\n  \n  lat <- df$latitude[1]\n  lon <- df$longitude[1]\n  \n  ts_plot <- ggplot(df, aes(date, count)) +\n    geom_line() +\n    geom_point() +\n    scale_y_continuous(labels = scales::label_comma(), limits = c(0, 120000)) +\n    scale_x_date(date_breaks = \"2 years\", date_labels = \"%Y\",\n                 limits = c(as.Date(\"2013-01-01\"), as.Date(\"2024-12-31\"))) +\n    theme_thekids() +\n    theme(axis.line = element_line(),\n          axis.ticks = element_line(),\n          axis.text.y = element_text(colour = \"white\")) +\n    labs(x = NULL, y = \" \", title = \" \")\n  \n  ts_plot + inset_element(\n    inset_map(lat, lon),\n    left = 0.8, right = 1,\n    bottom = 0.02, top = 0.55\n  ) \n})\n\nfig2 <- wrap_plots(hospital_plots, ncol = 2) +\n  plot_annotation(caption = \" \")\n```\n:::\n\n\n\n![Reveal 2](images/fig2.png){#fig-source width=\"80%\" align=\"center\"}\n\n## Figure 3: Time Series with Caption\n\nThis version includes visible axes and ticks, making the data easier to interpret. A caption indicating the data source `AIHW API` is added as a real nudge to what the data might be. Hospital titles are still not shown.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhospital_plots <- lapply(split(my_aihw_dat, my_aihw_dat$hospital), function(df) {\n  \n  lat <- df$latitude[1]\n  lon <- df$longitude[1]\n  \n  ts_plot <- ggplot(df, aes(date, count)) +\n    geom_line() +\n    geom_point() +\n    scale_y_continuous(labels = scales::label_comma(), limits = c(0, 120000)) +\n    scale_x_date(date_breaks = \"2 years\", date_labels = \"%Y\",\n                 limits = c(as.Date(\"2013-01-01\"), as.Date(\"2024-12-31\"))) +\n    theme_thekids() +\n    theme(axis.line = element_line(),\n          axis.ticks = element_line()) +\n    labs(x = NULL, y = \" \", title = \" \")\n  \n  ts_plot + inset_element(\n    inset_map(lat, lon),\n    left = 0.8, right = 1,\n    bottom = 0.02, top = 0.55\n  ) \n})\n\nfig3 <- wrap_plots(hospital_plots, ncol = 2) +\n  plot_annotation(caption = \"Data source: AIHW API, code: 'XXX-XX'\")\n```\n:::\n\n\n\n![Reveal 3](images/fig3.png){#fig-source width=\"80%\" align=\"center\"}\n\n## Figure 4: The reveal!\n\nAnd here, everything is revealed.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhospital_plots <- lapply(split(my_aihw_dat, my_aihw_dat$hospital), function(df) {\n  \n  lat <- df$latitude[1]\n  lon <- df$longitude[1]\n  \n  ts_plot <- ggplot(df, aes(date, count)) +\n    geom_line() +\n    geom_point() +\n    scale_y_continuous(labels = scales::label_comma(), limits = c(0, 120000)) +\n    scale_x_date(date_breaks = \"2 years\", date_labels = \"%Y\",\n                 limits = c(as.Date(\"2013-01-01\"), as.Date(\"2024-12-31\"))) +\n    theme_thekids() +\n    theme(axis.line = element_line(),\n          axis.ticks = element_line()) +\n    labs(x = NULL, y = \"ED Presentations (n)\", title = unique(df$hospital))\n  \n  ts_plot + inset_element(\n    inset_map(lat, lon),\n    left = 0.8, right = 1,\n    bottom = 0.02, top = 0.55\n  ) \n})\n\nfig4 <- wrap_plots(hospital_plots, ncol = 2)  +\n  plot_annotation(caption = \"Data source: AIHW API, code: 'MYH-ED'\")\n```\n:::\n\n\n\n![The final reveal](images/fig4.png){#fig-source width=\"100%\" align=\"center\"}\n\n## Putting them all together\n\nPutting these four stages of the reveal together also posed a few challenges! Combining multiple plots that, *themselves*, were assembled with `patchwork`. \n\nFor this, we again turned to ai, and the resulting code is available below.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Divider \"plots\" (vertical and horizontal)\nv_thickness <- 0.005  # fraction of width for vertical divider (adjust)\nh_thickness <- 0.01  # fraction of height for horizontal divider (adjust)\n\ndivider_v <- ggplot() +\n  theme_void() +\n  theme(plot.background = element_rect(fill = \"black\", colour = NA))\n\ndivider_h <- divider_v  # same look for horizontal divider\n\n# Make rows with a vertical divider between plots\ntop_row <- wrap_plots(p1, divider_v, p2, ncol = 3, widths = c(1, v_thickness, 1))\nbottom_row <- wrap_plots(p3, divider_v, p4, ncol = 3, widths = c(1, v_thickness, 1))\n\n# Combine rows with a horizontal divider between them\nfinal <- wrap_plots(top_row, divider_h, bottom_row, \n                    ncol = 1, heights = c(1, h_thickness, 1)) +\n  plot_layout(ncol = 1) \n\nfinal\n\nggsave(paste0(Sys.Date(), \"_fig1-4.png\"),\n       width = 20, height = 10)\n```\n:::\n\n\n\n![All 4 Guess The Plots Together](images/all4.png){#fig-source width=\"100%\" align=\"center\"}\n\n# Closing comments\n\nAccessing health data via the AIHW API opens up many possibilities for data analysis and visualisations to help us understand trends in Australian Health Statistics. Or, perhaps for finding informative data to aid in one's study planning! The `readaihw` helps put this data at the fingertips of any R user, reducing the barriers to diving in and exploring this data. The figures shown here are not overly polished - as that wasn't the purpose of this post. However, hopefully we've shown how easy it can be to draw some interesting local insights while having a bit of fun along the way.\n\n## Acknowledgements\n\nThanks to Zac Dempsey, Robin Cook, Elizabeth McKinnon, and Wes Billingham for providing feedback on and reviewing this post.\n\n## Reproducibility Information\n\nThe session information can also be seen below.\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\nR version 4.5.0 (2025-04-11)\nPlatform: aarch64-apple-darwin20\nRunning under: macOS Sequoia 15.6.1\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.5-arm64/Resources/lib/libRblas.0.dylib \nLAPACK: /Library/Frameworks/R.framework/Versions/4.5-arm64/Resources/lib/libRlapack.dylib;  LAPACK version 3.12.1\n\nlocale:\n[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n\ntime zone: Australia/Perth\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] patchwork_1.3.2       ggmap_4.0.2           jsonlite_2.0.0       \n [4] httr_1.4.7            readaihw_0.0.2        thekidsbiostats_1.4.1\n [7] extrafont_0.20        flextable_0.9.10      gtsummary_2.4.0      \n[10] lubridate_1.9.4       forcats_1.0.1         stringr_1.5.2        \n[13] dplyr_1.1.4           purrr_1.1.0           readr_2.1.5          \n[16] tidyr_1.3.1           tibble_3.3.0          ggplot2_4.0.0        \n[19] tidyverse_2.0.0      \n\nloaded via a namespace (and not attached):\n [1] tidyselect_1.2.1        viridisLite_0.4.2       farver_2.1.2           \n [4] S7_0.2.0                bitops_1.0-9            fastmap_1.2.0          \n [7] fontquiver_0.2.1        janitor_2.2.1           promises_1.3.3         \n[10] labelled_2.15.0         digest_0.6.37           timechange_0.3.0       \n[13] mime_0.13               lifecycle_1.0.4         magrittr_2.0.4         \n[16] compiler_4.5.0          rlang_1.1.6             tools_4.5.0            \n[19] yaml_2.3.10             data.table_1.17.8       knitr_1.50             \n[22] labeling_0.4.3          askpass_1.2.1           htmlwidgets_1.6.4      \n[25] curl_7.0.0              plyr_1.8.9              xml2_1.4.0             \n[28] RColorBrewer_1.1-3      withr_3.0.2             grid_4.5.0             \n[31] shinyFiles_0.9.3        sysfonts_0.8.9          gdtools_0.4.4          \n[34] xtable_1.8-4            extrafontdb_1.1         scales_1.4.0           \n[37] cli_3.6.5               rmarkdown_2.30          ragg_1.5.0             \n[40] generics_0.1.4          rstudioapi_0.17.1       tzdb_0.5.0             \n[43] readxl_1.4.5            assertthat_0.2.1        cellranger_1.1.0       \n[46] vctrs_0.6.5             fontBitstreamVera_0.1.1 hms_1.1.3              \n[49] systemfonts_1.3.1       jpeg_0.1-11             glue_1.8.0             \n[52] stringi_1.8.7           gtable_0.3.6            later_1.4.4            \n[55] pillar_1.11.1           rappdirs_0.3.3          htmltools_0.5.8.1      \n[58] openssl_2.3.4           R6_2.6.1                httr2_1.2.1            \n[61] textshaping_1.0.3       evaluate_1.0.5          shiny_1.11.1           \n[64] haven_2.5.5             png_0.1-8               snakecase_0.11.1       \n[67] fontLiberation_0.1.0    httpuv_1.6.16           Rcpp_1.1.0             \n[70] zip_2.3.3               uuid_1.2-1              Rttf2pt1_1.3.14        \n[73] officer_0.7.0           xfun_0.53               fs_1.6.6               \n[76] pkgconfig_2.0.3        \n```\n\n\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/tabwid-1.1.3/tabwid.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/tabwid-1.1.3/tabwid.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}