{
  "hash": "8d644647378e00854f6e0a9701d07811",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Large-scale projects\"\nauthor: \"Dr Bethy McKinnon and ...\"\nformat:\n  html:\n    code-fold: true\n    tabset: true\n    toc: true\n    toc-location: left\n    number-depth: 1\ndate: \"2025-06-10\"\ncategories:\n  - R\n  - Modelling\n  - Quarto\ndraft: true\neditor_options: \n  chunk_output_type: console\nexecute:\n  echo: false\n  warning: false \nfig-align: center\nfig-format: png\nfig-cap-location: bottom\nfig-cap-align: center\ntbl-cap-location: bottom\nfig-title: Figure # this is actually the default, but can specify another label prefix here\nnumber-sections: true\ncrossref:  \n  chapters: true\n\n---\n\n\n<button class=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\">\n\n\n# Overview\n\n\n::: {.cell}\n\n:::\n\n\nA recent collaboration led by Dr Melissa Licari of The Kids produced a summary report detailing the challenges faced by individuals (and the families that care for them) living with Tourette syndrome and other tic disorders (https://www.thekids.org.au/impactfortourettes). The report was a summary of results of a national survey undertaken in 2023/2024(??), and the data analysis and preparation of figures for publication was undertaken by the Biostatistics team at The Kids.\n\nTo support production of the final publication there was considerable behind-the-scenes work around various challenges of a large-scale project such as this. For example:\n\n-   Survey coverage of 7 specific impact domains, being comprised of existing validated questionnaires as well as bespoke questions, and including multiple response types (eg multiple choice, radio buttons, free-text fields)\n-   Synthesis of data from 3 different distinct surveys (adults with tics, parents of children with tics, carers of adults with tics) having largely overlapping item/theme content but not necessarily identically matched response choices\\\n-   Only partial survey completion by many respondents\\\n-   Preparation of high-quality PDF output that met the needs of the production team whilst conforming to The Kids style guidelines.\n\nWith a target endpoint rather different than the journal articles we are typically preparing for, our experience with the TS collaboration has prompted us to share our approach to tackling larger-scale projects, and any insight it may provide!\n\n# Project design\n\nThe reproducible code-based capabilities of R, readily integrated into a suite of output options via the RStudio environment, have provided the ideal platform to compile a comprehensive document of data summaries, tabulations and graphs from which the authors of the report could draw key results for public dissemination. Furthermore, the theming and formatting features of our in-house `thekidsbiostats` package (https://github.com/The-Kids-Biostats/thekidsbiostats.) are a particularly useful asset for preparation of publication-ready output that conforms to The Kids style guide.\n\nIn line with current practice of our team, features of our general project design include:\n\n-   Overall organisation being that of a self-contained R project with accompanying sub-directories.(See `thekidsbiostats::create_project()` for project template)\n\n    -   Given the scale of the TS project, generation of tables and figures was further blocked into 9 different files corresponding to the distinct survey sections (background information, 7 impact domains, looking to the future). This enabled code and output to be run and checked in manageable chunks before resultant tables and plots being called into into an overarching file that pulled it all together.\n    \n\n![Directory/subdirectory setup](examples/file_setup.png){#fig-file_setup}\n\n*Use of sub-directories in the project organisation is illustrated by @fig-file_setup.*\n\n\n-   Main document files are now Quarto documents (with a .qmd extension), superseding the previous default RStudio Markdown (.mkd) files, having more powerful capabilities but still retaining the header-text-code structure and simplicity and flexibility of the markdown syntax for text formatting. (See \\[https://quarto.org/docs/authoring/markdown-basics.html\\] for a useful reference.)\n\nQuarto documents can be written and rendered from either a **visual** view or a *source** view:\n\n![**Visual** screen of the default new QMD file](examples/visual_qmd.png){#fig-visual, height=2.5in}\n\n\n![**Source** screen of the default new QMD file](examples/source_qmd.png){#fig-source, height=2.5in}  \n\n\n\n![HTML report](examples/defaultQMD-HTML.png){#fig-defaultHTML} \n\n::: {.column-margin}\n@fig-defaultHTML shows the HTML report produced by rendering the default QMD file\n:::\n\n\n<br>\n\n# Robustness and reproducibility\n\nNumerous features of an appropriate project design and ensuing workflow ensure that the end product of the data analysis is robust and reproducible:\n\n-   Utilisation of a project template with organised sub-directories (See `thekidsbiostats::create_project()`)\n\n-   Use of a document template that includes a run date in the header and session info at the end (See `thekidsbiostats::create_template()`)\n\n-   Inherent Quarto document features: Self-containment of the run environment, with other inputs called explicitly; auto-save with each render; text interspersed with result-producing code.\n\n-   Routine ongoing checks that code as written produces the intended results when executed. Note the capability provided by the Quarto Visual editor to view results of coding chunks as you go - appropriate placement of code within text provides an avenue for a convenient step-by-step draft look at the flow of the finished product.\n\n-   Utilisation of user-written functions, with appropriate testing, minimises errors that can creep in when reliant on cut-and-pastes or coding of repeated tasks or tasks comprised of multiple steps.\n\n# Streamlining and theming\n\nCoding can be streamlined by adoption of time-saving techniques:\n\n-   Setting of document-wide formatting, execution and style parameters in the document header\n    -   For example, extra lines of code in the document YAML headers to facilitate numbering (and referencing) of figure and table captions\n\n    -  Further refinement and defnition can be accomplished by utilisation of a .css file (Note the styles.css file created and included in the document header if creating a new document using the Quarto template in `thekidsbiostats` package)\n\n-   Familiarisation with short-cut keys and code (eg see ...)\n\n-   Judicious use of bespoke functions to reduce repetitive coding eg in generation of tables and plots\n\n*Example??*\n\n-   Professionalism in presentation is enhanced by consistent formatting and theming, which can be embedded into function calls. Note that loading of the `thekidsbiostats` package enabled easy incorporation of Barlow font and the Institute's colour palette as specified in the brand style toolkit.\n\n*Example??*\n\n<br>\n\n# Figures for publication\n\nAt the pointy end of the TS project, we were tasked with generating in a publication-ready format those figures which the authors had chosen to be included in the final public-facing summary report. This required close consultation with the production team to ensure that the images produced in the PDF files that were requested stayed true to the colour and font formatting as intended.  After exploration of several options we settled on the `cairo_pdf`function from the `grDevices` package in the System Library.\n\nExample Code:\n\n\n::: {.cell}\n\n:::\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![Diagnosing medical professional - HTML `ggplot` output](large_scale_project_files/figure-html/fig-diagProf_html-1.png){#fig-diagProf_html}\n:::\n:::\n\n\n::: column-margin\n**Diagnosing professional**\\\nRegular HTML report output\n:::\n\n![Generated by `cairo_pdf`](examples/diagProf_cairo_pdf.png){#fig-diagProf_cairo_pdf}\n\n::: column-margin\n**Diagnosing professional**\\\nThe PDF as generated by cairo_pdf(...,family=\"Barlow) provides a close likeness to the HTML output of @fig-diagProf_html, and was the preferred format of the production team. \n:::\n\n![Generated by `Cairo::CairoPDF`](examples/diagProf_CairoPDF.png){#fig-diagProf_CairoPDF}\n\n::: column-margin\n**Diagnosing professional**\\\nAs noted by the production team when assessing the alternative outputs, the PDF as generated by `CairoPDF(...,family=\"Barlow)` didn't have such clean lines in its rendering, as can be seen in the discrepancies here, when contrasted with @fig-diagProf_html and @fig-diagProf_cairo_pdf. (Note, also, although retaining `fonts` in its argument list, the help file for `CairoPDF` says `Cairo` automatically detects and embeds fonts.)\n:::\n\n\nGiven a perceived need to also be able to work with a CMYK colour palette to facilitate true-to-colour printing, we further explored use of the `pdf` function (from the system library) to generate PDF figures because of the `colormodel` inclusion in its argument list as an optional parameter:\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![Diagnosing medical professional - HTML `ggplot` output with CMYK palette](large_scale_project_files/figure-html/fig-cmyk_diagPRac-1.png){#fig-cmyk_diagPRac}\n:::\n:::\n\n\n::: column-margin\n**Diagnosing professional**\\\nRegular HTML report output of a ggplot created using the CMYK palette of the The Kids brand. \n:::\n\n\n\n![Generated by `pdf`](examples/diagProfCMYK_pdf.png){#fig-cmyk_diagProf_pdf}\n\n::: column-margin\n**Diagnosing professional**\\\nThis PDF was generated by `pdf(...,fonts=\"Barlow',colormodel=\"cmyk\")` that had as its argument the plot seen in @fig-cmyk_diagProf_pdf. The colour is indistinguishable from that in @fig-diagProf_html but the Barlow font has yet to be embedded. Note that the choice of default font seen appears to be device dependent.    \n:::\n\n\n\n![Generated by `extrafont::embed_fonts` applied to the file output by `pdf`](examples/embedded_diagProfCMYK_pdf.png){#fig-embedded_diagProf_pdf}\n\n::: column-margin\n**Diagnosing professional**\\\nFormatting and theming features have been retained satisfactorily once `embed_fonts(...)` has been applied to the above output file of `pdf(...,fonts=\"barlow\",colormodel=\"cmyk\")` seen in @fig-cmyk_diagProf_pdf.   \n:::\n\n<br>\n\nThe second example is a more complicated plot of mean responses to the Motor Tic, Obsessions and Compulsions, Vocal Tic Evaluation Survey (MOVES) to assess the severity of tics\nduring mild and peak periods.  This was one of several plots where we encountered difficulties with getting the `pdf`/`embed_fonts` option to work properly. \n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![The MOVES best and worst days - HTML output](large_scale_project_files/figure-html/fig-moves_html-1.png){#fig-moves_html}\n:::\n:::\n\n\n::: column-margin\n**The MOVES**  \nRegular HTML report output\n:::\n\n<br>\n\n\n\n\n\n![Generated by `cairo_pdf`](examples/moves_cairo_pdf.png){#fig-moves_cairo_pdf}\n\n::: column-margin\n**The MOVES**\\\nPDF as generated by cairo_pdf(...,family=\"Barlow\"), which again closely resembles the look of the HTML output\n:::\n\n![Generated by `CairoPDF`](examples/moves_CairoPDF.png){#fig-moves_CairoPDF}\n\n::: column-margin\n**The MOVES**\\\nIn the PDF as generated by CairoPDF(..., family=\"Barlow\") we again notice a discrepancy in \nline width compared to `cairo_pdf()`\n:::\n\n![Generated by `pdf`](examples/moves_pdf.png){#fig-moves_pdf}\n\n::: column-margin\n**The MOVES**  \nIn the PDF generated by pdf(..., fonts=\"Barlow\"), we again see a default font that is not Barlow\n:::\n\n\n\n![Generated by `pdf` followed by a call to `extrafont::embed_fonts`](examples/embedded_moves_pdf.png){#fig-embedded_moves_pdf}\n\n::: column-margin\n\n::: callout-note\n**The MOVES**\\\nGeneration of the PDF by application of pdf(...,fonts=\"Barlow\") followed by embed_fonts(...) has lost the ability to embed the Barlow font for this particular plot, whereas this approach successfully worked for the simpler **Diagnosing professional** plot of @fig-cmyk_diagProf_pdf.\n:::\n\n:::\n\n# Ongoing Challenges  \n\nThere is always a balance of time investment and where to draw the line when attempting to further one's technical prowess, particularly with R coding! Some ongoing challenges that haven't yet been satisfactorily addressed include: \n\n- An apparent lack of some intuitive control of formatting figure/table captions within the Quarto document eg  font sizing and getting the whole of a numbered prefix to be bolded, if so desired : \"**Figure** 1.1 A plot of ...\" is relatively easy to code but not \"**Figure 1.1** A plot of ...\". \n\n- There seems to be a lack of clear online guidance around PDF exporting options and output discrepancies (embedding issues, Windows vs Mac, CMYK for printing vs device)\n\n\n<br>\n\n# Reproducibility Information\n\n\n[Session Information]</button>\n\n::: {#collapseOne .accordion-collapse .collapse}\n<div>\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\nR version 4.4.1 (2024-06-14 ucrt)\nPlatform: x86_64-w64-mingw32/x64\nRunning under: Windows 10 x64 (build 19045)\n\nMatrix products: default\n\n\nlocale:\n[1] LC_COLLATE=English_Australia.utf8  LC_CTYPE=English_Australia.utf8   \n[3] LC_MONETARY=English_Australia.utf8 LC_NUMERIC=C                      \n[5] LC_TIME=English_Australia.utf8    \n\ntime zone: Australia/Perth\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] Cairo_1.6-2           thekidsbiostats_1.1.0 flextable_0.9.8      \n [4] gtsummary_2.2.0       lubridate_1.9.4       forcats_1.0.0        \n [7] stringr_1.5.1         dplyr_1.1.4           purrr_1.0.4          \n[10] readr_2.1.5           tidyr_1.3.1           tibble_3.2.1         \n[13] ggplot2_3.5.2         tidyverse_2.0.0       extrafont_0.19       \n\nloaded via a namespace (and not attached):\n [1] gtable_0.3.6            xfun_0.52               htmlwidgets_1.6.4      \n [4] tzdb_0.5.0              vctrs_0.6.5             tools_4.4.1            \n [7] generics_0.1.4          pkgconfig_2.0.3         data.table_1.17.0      \n[10] RColorBrewer_1.1-3      uuid_1.2-1              lifecycle_1.0.4        \n[13] compiler_4.4.1          farver_2.1.2            textshaping_1.0.1      \n[16] janitor_2.2.1           snakecase_0.11.1        httpuv_1.6.16          \n[19] fontquiver_0.2.1        fontLiberation_0.1.0    htmltools_0.5.8.1      \n[22] yaml_2.3.10             Rttf2pt1_1.3.12         pillar_1.10.2          \n[25] later_1.4.2             extrafontdb_1.0         openssl_2.3.2          \n[28] mime_0.13               fontBitstreamVera_0.1.1 tidyselect_1.2.1       \n[31] zip_2.3.2               digest_0.6.37           stringi_1.8.7          \n[34] labeling_0.4.3          labelled_2.14.1         fastmap_1.2.0          \n[37] grid_4.4.1              cli_3.6.5               magrittr_2.0.3         \n[40] patchwork_1.3.0         withr_3.0.2             gdtools_0.4.2          \n[43] scales_1.4.0            promises_1.3.2          timechange_0.3.0       \n[46] rmarkdown_2.29          officer_0.6.9           askpass_1.2.1          \n[49] ragg_1.4.0              hms_1.1.3               shiny_1.10.0           \n[52] evaluate_1.0.3          haven_2.5.4             knitr_1.50             \n[55] rlang_1.1.6             Rcpp_1.0.14             xtable_1.8-4           \n[58] glue_1.8.0              xml2_1.3.8              rstudioapi_0.17.1      \n[61] jsonlite_2.0.0          R6_2.6.1                shinyFiles_0.9.3       \n[64] systemfonts_1.2.3       fs_1.6.6               \n```\n\n\n:::\n:::\n\n\n</div>\n:::\n\n",
    "supporting": [
      "large_scale_project_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}