---
title: "Small-sample analysis"
format:
  html:
    code-fold: true
    toc: true
    toc-location: left
    html-table-processing: none
date: "2024-09-10"    
author: "Dr Bethy McKinnon, Dr Matt Cooper"
categories:
  - Small Samples
  - R
draft: true
---

```{r setup, include=F, message = F, warning = F}
knitr::opts_chunk$set(echo = F, message = F, warning = F, include=T)

library(biometrics)
library(ggpubr)
library(cowplot)
library(pwr)
library(DescTools)
library(tidyverse)
```

# Overview

The sample size in research projects is often limited by practical constraints e.g. cost of equipment, logistics of animal breeding and management, or the (low) prevalence of patients with a particular condition. Group sizes of 3-10 are typical of many animal studies and laboratory experiments, and while small can mean different things to different researchers, we're going to focus here on sample statistics and sampling variation as the same size in a project heads down into this territory.

# Sample statistics and sampling variation

To study a population of interest, data is gathered from a representative sample and then summaries statistics such as the sample median, mean, standard deviation or a proportion are derived to characterise that sample. These sample statistics vary about the *(true unknown)* population parameter for which they provide an estimate, and we can calculate confidence intervals to go along with these estimates to give context to a plausible range for the population parameters.

The smaller the sample size:

-   the larger the distance between the estimate (statistic we have derived) and the *(true unknown)* population parameter is likely to be, and
-   the wider the confidence interval.

This distance and width speaks to sampling error.

```{r}
# Default parameters have been set to planned mouse weight example
do.dist.plot<-function(dat,x="x",xlab="Weight (g)",title="",
                       bwidth=0.5,xintcpt=23,
                       xlims=c(15,31),xbreaks=seq(from=16,to=32,by=2))
{
  dat$x<-dat[,x]
  Plot<- ggplot(dat, aes(x = x)) + 
    geom_histogram(aes(y = after_stat(density)),center=xintcpt,binwidth=bwidth,
                   colour = 1, fill = "white") +
    geom_density(lwd = 1, colour = 4,
                 fill = 4, alpha = 0.25)+
    scale_x_continuous(limits=xlims,breaks=xbreaks)+
    labs(x=xlab,title=title,y="Density")+
    geom_vline(aes(xintercept=xintcpt),colour="red")
  return(Plot)
}
```

Consider the following example that demonstrates how sampling variation increases with decreasing sample sizes.

## Example: Samples of mice

```{r echo = F, warning = F, fig.width = 8, fig.height = 6, include = T}
set.seed(5)
fem.mice <- data.frame(x=rnorm(50000,mean=23,sd=2))
p.pop <- do.dist.plot(fem.mice,xlab="Weight (g)",title="Population distribution",bwidth=0.5)
p.pop +
  theme_institute(base_size = 18)
```

::: column-margin
**Figure 1**\
Here, we simulate data to represent a "population" of healthy female C57BL/6J mice who are expected to have a mean weight of 23 grams, with a standard deviation of 2 grams, at 14 weeks of age [The Jackson Laboratory](https://www.jax.org/jax-mice-and-services/strain-data-sheet-pages/body-weight-chart-000664).
:::

In practice researchers would only have data on a sample (subset) of a *(usually hypothetical)* population, from which to calculate summary statistics as estimates of general population characteristics. There is a potentially obvious, but perhaps nuanced, point here that needs to be stated, and that is that we do not know the population parameter we are estimating - if we did, we would not be trying to estimate it.

As may be expected, for larger datasets the calculated summary statistic is more likely to be closer to the *(true unknown)* population parameter from which the sample was drawn. Let's see how the calculated mean might be expected to vary from sample to sample for our mouse weight example.

To understand this variability, we'll start by randomly drawing 500 samples that are each of size n=50.

```{r}
get.sam<-function(sam.no,sam.size,popdat,x)
{
  out<-data.frame(i=sam.no,n=sam.size,x=sample(popdat[,x],size=sam.size))
  return(out)
}
get.mean<-function(dat)
{
  n<-nrow(dat)
  SE<-sd(dat$x)/sqrt(n)
  Mean<-mean(dat$x)
  lwr<-Mean-qt(0.975,df=n-1)*SE
  upr<-Mean+qt(0.975,df=n-1)*SE
  return(cbind(dat[1,c("i","n")],mean=Mean,se=SE,lwr=lwr,upr=upr))
}

set.seed(23)
samdat50<-do.call("rbind",lapply(1:500,get.sam,sam.size=50,popdat=fem.mice))
meandat50<-do.call("rbind",lapply(split(samdat50,samdat50$i),get.mean))

do.samplot<-function(dat,mdat,title="",xintcpt=23,add.ci=F)
{
  dat<-subset(dat,dat$i<6)
  mdat<-subset(mdat,mdat$i<6)
  mdat$x<-mdat[,"mean"]
  dat$y<-11-dat$i
  mdat$y<-11-mdat$i
  Splot<-  ggplot(data=dat,aes(x=x,y=y+0.02,fill=factor(i)))+
    geom_vline(aes(xintercept=xintcpt),colour="red",linetype=2)+
    geom_point(alpha=0.5,size=rel(3.5),shape=25)+
    geom_point(data=mdat,aes(x=mean,y=y-0.3),size=rel(3.5),shape=17)+
    labs(x="Weight (g)",y="Sample",title=title)+
    scale_y_continuous(limits=c(4.5,10.2),breaks=6:10,minor_breaks=NULL,labels=rev(paste0("S-",1:5)))+
    scale_x_continuous(expand=c(0,0),breaks=seq(from=16,to=32,by=2),minor_breaks=NULL)+
    annotate(geom="segment",x = 14.5,y = 4.5, xend = 14.5, yend = 5.6,
             col = "grey40", linewidth=1.5,linetype=3) +
    coord_cartesian(xlim = c(15,31),clip="off") +
    theme_institute(base_size = 16)+
    theme(legend.position="none")
  if(add.ci)
    Splot<-Splot+geom_errorbarh(data=mdat,aes(xmin=lwr,xmax=upr,y=y-0.3),height=0)
  return(Splot)
}

do.meanplot<-function(mdat,title="Distribution of sample mean",bwidth=0.5,xintcpt=23)
{
  Mplot<- ggplot(mdat, aes(x = mean)) + 
    geom_histogram(aes(y = after_stat(density)),center=23,binwidth=bwidth,
                   colour = 1, fill = "white") +
    geom_density(lwd = 1, colour = 4,
                 fill = 4, alpha = 0.25)+
    scale_x_continuous(expand=c(0,0),breaks=seq(from=16,to=32,by=2))+
    coord_cartesian(xlim = c(15,31),clip="off")+
    labs(x="Mean weight (g)",title=title,y="Density")+
    geom_vline(aes(xintercept=xintcpt),colour="red")+
    theme_institute(base_size = 16) + 
    theme(legend.position="none")
  return(Mplot)
}

splot50<-do.samplot(dat=samdat50,mdat=meandat50,
                    title = "a) Random draws of size n = 50")
mplot50<-do.meanplot(mdat=meandat50,xintcpt=mean(meandat50$mean), bwidth=0.2,
                     title = "b) Distribution of sample mean")
```

```{r echo = F, warning = F, fig.width = 8, fig.height = 8, include = T}
plot_grid(splot50, mplot50,
          nrow = 2, ncol = 1, align = "v", rel_heights = c(2,1.5))
```

::: column-margin
**Figure 2**\
a) The first 5 samples (of 500) with a sample size of 50, from a simulated population with mean=23 and std dev=2.\
<br> b) The distribution of the sample means calculated from each of the 500 draws.
:::

::: callout-note
The mean of the sample means takes a value of `r format(round(mean(meandat50$mean),2),nsmall=2)`, the same value, to 2 decimal places, as the *(in this instance, because we set it, known)* parameter for the population from which the sample was drawn.
:::

The spread (in Fig 2b) appears much reduced, but that is because it is not the spread of individual observations - it is the spread of sample means. In fact, the standard deviation of the sample means (i.e. the standard error of the mean) is `r round(sd(meandat50$mean),2)`, in line with the expected reduction of the population standard deviation of 2 by a factor of $1/\sqrt{n}$.

Now let's see what happens as the sample size decreases.

Here, a sample of n=20.

```{r}
set.seed(20)
samdat20<-do.call("rbind",lapply(1:500,get.sam,sam.size=20,popdat=fem.mice))
meandat20<-do.call("rbind",lapply(split(samdat20,samdat20$i),get.mean))

set.seed(25)
samdat5<-do.call("rbind",lapply(1:500,get.sam,sam.size=5,popdat=fem.mice))
meandat5<-do.call("rbind",lapply(split(samdat5,samdat5$i),get.mean))

splot20<-do.samplot(dat=samdat20,mdat=meandat20,
                    title = "a) Random draws of size n = 20")
mplot20<-do.meanplot(mdat=meandat20,xintcpt=mean(meandat20$mean),bwidth=0.4,
                     title = "b) Distribution of sample mean")
splot5<-do.samplot(dat=samdat5,mdat=meandat5,
                   title = "Random draws of size n = 5")
mplot5<-do.meanplot(mdat=meandat5,xintcpt=mean(meandat5$mean),bwidth=0.5,
                    title = "b) Distribution of sample mean")
```

```{r echo = F, warning = F, fig.width = 8, fig.height = 8, include = T}
plot_grid(splot20, mplot20,
          nrow=2, ncol=1, align="v",
          rel_heights=c(2,1.5))
```

::: column-margin
**Figure 3**\
a) The first 5 samples (of 500) with a sample size of 20, from a simulated population with mean=23 and std dev=2.\
<br> b) The distribution of the sample means calculated from each of the 500 draws.
:::

This spread here (in Fig 3b) does not look too different to that seen above (in Fig 2b).

And here, a sample of n=5.

```{r echo = F, warning = F, fig.width = 8, fig.height = 8, include = T}
plot_grid(splot5, mplot5,
          nrow=2, ncol=1, align="v",
          rel_heights=c(2,1.5))
```

::: column-margin
**Figure 4**\
a) The first 5 samples (of 500) with a sample size of 5, from a simulated population with mean=23 and std dev=2.\
<br> b) The distribution of the sample means calculated from each of the 500 draws.
:::

It is clear that as the sample size decreases the estimates of the population mean become progressively more variable. This increased variability is taken into account in the formula for calculating the 95% confidence interval which becomes accordingly wider as precision decreases:

```{r echo = F, warning = F, fig.width = 8, fig.height = 10, include = T}
splot50.ci<-do.samplot(dat=samdat50,mdat=meandat50,add.ci=T,
                       title="a) Sample size: n=50")
splot20.ci<-do.samplot(dat=samdat20,mdat=meandat20,add.ci=T,
                       title="b) Sample size: n=20")
splot5.ci<-do.samplot(dat=samdat5,mdat=meandat5,add.ci=T,
                      title="c) Sample size: n=5")
ggarrange(splot50.ci,splot20.ci,splot5.ci,ncol=1)
```

::: column-margin
**Figure 5**\
Random samples of increasing size, annotated with means and 95% confidence intervals.
:::

# Comparative studies with small group sizes

Expanding on these observations, they highlight a major limitation of small-sample studies in that they lack power to detect anything other than large differences or large “effects". This is because the sampling distribution of the test statistic needs to take account of the increased variability of the sample statistics on which the test procedure is based.

For comparisons of mean values (e.g. a t-test) a large effect translates to a large difference between group means relative to the within-group variation. Power (which relates to Type-II error) is an indication of the probability of a study to observe (or conclude) a difference if a difference (in the underlying populations being compared) truly exists.

```{r}
eff.size<-seq(from=0,to=3,by=0.2)
es.dat.80<-data.frame(n=c(5,10,15),
                      eff.size=c(pwr.t.test(n=5,power=0.8)$d,
                                 pwr.t.test(n=10,power=0.8)$d,
                                 pwr.t.test(n=15,power=0.8)$d),
                      power=0.8)
es.dat<-rbind(es.dat.80,
              data.frame(n=5,eff.size,power=pwr.t.test(n=5,d=eff.size)$power),
              data.frame(n=10,eff.size,power=pwr.t.test(n=10,d=eff.size)$power),
              data.frame(n=15,eff.size,power=pwr.t.test(n=15,d=eff.size)$power))
es.dat<-es.dat[order(es.dat$n,es.dat$power),]
es.dat.80$N<-factor(es.dat.80$n,labels=paste0("n=",c(5,10,15)))
es.dat$N<-factor(es.dat$n,labels=paste0("n=",c(5,10,15)))
power.plot<-ggplot(data=es.dat,aes(x=eff.size,y=power,colour=N))+
  geom_line(linewidth=1)+
 # geom_point(data=es.dat.80,aes(colour=N),shape=19,size=rel(3))+
#geom_segment(data=es.dat.80,aes(yend=rep(0,3),colour=N),linetype=2)+
#geom_segment(data=es.dat.80,aes(xend=rep(0,3),colour=N),linetype=2)+
  labs(x="Effect size",y="Power to conclude a difference \nbetween the means of 2 groups",
       title="Power curves for t-test",legend="Sample size")+
  theme_institute(base_size = 18) +
  theme(legend.position="right")
```

```{r,echo = F, warning = F, fig.width = 8, fig.height = 8, include = T}
power.plot
```

::: column-margin
**Figure 6**\
Power plots for a 2-sample t-test, with alpha=0.05 and equal sample sizes, assuming equal variances.
:::

::: callout-note
If n=5 for both groups, the minimum difference at which a 2-sample t-test has at least 80% power to detect is just over 2 standard deviations.

In line with the example above, if we were comparing weights of 2 treatment groups of mice, and it's reasonable to assume a common SD of 2g, this would correspond to an absolute difference of 4g in the population mean weights - quite a large treatment effect.
:::

At the design stage of an experiment, it is important to determine the minimum clinically meaningful difference/effect size you want to be able to detect, and power your study accordingly by including a sufficiently large sample.

For example, one could consider increasing power by extending the simple 2-sample approach to a factorial design, where the between treatment group differences are simultaneously examined across one or more factors (eg sex, age group).

# Using confidence intervals to guide decision-making

Confidence intervals can be a little tricky to get your head around. They don't provide a range in which XX% (typically 95%) of the data values lie, but rather relate to our belief regarding where the population parameter of interest (e.g. the true mean or proportion) lies.

::: callout-important
The "confidence" comes from **sampling theory**: Suppose we sample the same population *many many times*, and for each sample calculate a 95% confidence interval *around the sample mean*, we would expect that 95% of the time the constructed interval will capture the true population mean.
:::

Sometimes, just by chance (or bad luck), our whole sample may lie towards one end (the tail) of the population distribution (see S-3 for n=5 in Fig 4a/Fig 5c above) resulting in a 95% CI that happens to "miss" the true value. **The real problem here is that for *our* study - we don't actually know if this has happened!**. This is because, in practice, we *only* have a single sample and don't know the true population parameter for the population from which the sample was drawn; hence, the level of confidence simply reflects a rather nominal degree of plausibility.

## Example: Proportions

So, we know that for small sample sizes the calculated confidence intervals will be wide. This can be even more evident with proportions. Despite this, the upper and/or lower limits of these confidence intervals can still offer useful bounds in which to aid with decision making.

```{r message = F, warning = F}
get.limits<-function(ntot,dd,k)
{
  n.resp<-0:ntot
  ucb<-data.frame(type="upr",n.resp=n.resp,n=ntot,prop=n.resp/ntot,
                  y=BinomCI(x=n.resp,n=ntot,conf.level=0.9,sides="right",method="clopper")[,3])
  lcb<-data.frame(type="lwr",n.resp=n.resp,n=ntot,prop=n.resp/ntot,
                  y=BinomCI(x=n.resp,n=ntot,conf.level=0.9,sides="left",method="clopper")[,2])
  lims<-rbind(ucb,lcb)
  lims$ymin<-ifelse(lims$type=="upr",0,lims$y)
  lims$ymax<-ifelse(lims$type=="upr",lims$y,1)
  lims$x<-ifelse(lims$type=="upr",lims$n.resp-dd,lims$n.resp+dd)
  lims$xmin<-ifelse(lims$type=="upr",lims$n.resp-k*dd,lims$x)
  lims$xmax<-ifelse(lims$type=="upr",lims$x,lims$n.resp+k*dd)
  return(lims)
}
plot.limits<-function(ntot,DLT=0.4,Resp=0.5)
{
  lim.vals<-get.limits(ntot=ntot,0.1,3)
  lim.vals$Type<-factor(lim.vals$type,labels=c("80% LCB for response","90% UCB for toxicity"))
  my.col<-c("#C4961A","#00AFBB")
  lims.plot<-ggplot(data=lim.vals,aes(x=x,y=y,colour=Type))+
    geom_linerange(aes(ymin=ymin,ymax=ymax,x=x),linewidth=1)+
    geom_linerange(aes(xmin=xmin,xmax=xmax,y=y),linewidth=1)+
    scale_x_continuous(expand=c(0.2,0.2),breaks=0:ntot,name="Number of DLTs",
                       sec.axis=dup_axis(name="Number of responses"))+
    scale_y_continuous(expand=c(0,0),name="Probability of toxicity",
                       breaks=seq(from=0,to=1,by=0.2),minor_breaks=NULL,
                       sec.axis = dup_axis(
                         name = "Probability of response",
                         breaks=seq(from=0,to=1,by=0.2))) +
    theme_institute(base_size = 16) + 
    scale_color_manual(values=my.col,name="") +
    coord_cartesian(xlim = c(0,ntot),clip="off") +
    geom_hline(yintercept=DLT,color=my.col[2],linetype=2) +
    annotate(geom="text",x=-1,y=DLT,label="DLT \nthreshold", 
             color=my.col[2], size=rel(3.5),fontface=3) +
    geom_hline(yintercept=Resp,color=my.col[1],linetype=2) +
    annotate(geom="text",x=11,y=Resp,label="Efficacy \nthreshold", 
             color=my.col[1], size=rel(4),fontface=3)+ 
    labs(title=paste("Planned cohort size of ",ntot)) +
    theme(legend.position="bottom",
          axis.title.y = element_text(margin=margin(r=15,l=25))) +
    guides(colour = guide_legend(reverse=T))
  return(lims.plot)
}
lims.15 <- plot.limits(ntot=15)
lims.10 <- plot.limits(ntot=10)
```

For example, consider patient recruitment to an early-phase clinical trial of a new drug that is under development. Recruitment may cease early if there is sufficient evidence of high toxicity or provisional efficacy - according to *pre-defined* criteria. Here, stopping rules based on one-sided binomial confidence intervals (think, proportions) can inform trial planning and implementation.

Say enrollment into a dose expansion cohort is planned, with an upper threshold of 40% for allowable dose limiting toxicity and treatment efficacy indicated if response rates are at least 50%. Assuming the planned cohort size is 10, Figure 7 presents 80% lower confidence bounds (LCBs) as a reference for response counts, and more conservative 90% upper confidence bounds (UCBs) for toxicity counts .

```{r echo = F, warning = F, fig.width = 8, fig.height = 7, include = T}
lims.10
```

::: column-margin
**Figure 7**\
90% upper confidence bounds (UCBs, teal) for dose-limiting toxicity (DLT) and 80% lower confidence bounds (LCBs, ochre) for treatment response, for a sample size of 10. Bounds were constructed from one-sided binomial confidence intervals, using the Clopper-Pearson method.
:::

The drug would be deemed to have an acceptable toxicity profile if **no more than 1 subject was impacted by a dose-limiting toxicity (DLT)**. Given the small sample size, if there are 2 or more impacted subjects then the confidence interval for the true toxicity rate will be in excess of the 40% threshold, even though the observed rate may be no more than 20%. The stopping rule for unacceptable toxicity would be invoked if a second DLT occurs prior to the final enrollment.

Similarly, if treatment elicits **an efficacious response in at least 8 patients**, there would be reasonable confidence that the treatment has demonstrated sufficient efficacy to warrant continued investigation, and should this be established prior to enrolment of the complete cohort, the trial may be stopped early.

Confidence intervals for proportions are notoriously wide, and typically large sample sizes are sought to obtain a required level of precision for *(around)* the rate that is being estimated. If available resources are limited, it may be that a more efficient experimental could be considered.

# Further thoughts

For small-sample studies, as with those based on larger samples, consider if the results can be appropriately generalised to fit with the aim of the study.

**Population sampling:** Consider if there are subtle biases resulting from recruitment strategies that may impact how representative the sample is of the population being characterized.

**Laboratory experiments or animal studies:** Ensure that environmental factors have been adequately controlled and appropriate randomization undertaken so that differences between groups can be confidently attributed to the condition/treatment under study. Small-sample experiments require tight control of between-individual variation to achieve maximum power and appropriate randomization must be undertaken for results to be valid.  


## Reproducibility Information

To access the .qmd (Quarto markdown) files as well as any R scripts or data that was used in this post, [please visit our GitHub](https://github.com/The-Kids-Biostats/The-Kids-Biostats.github.io/tree/main/posts/pre_post):

The session information can also be seen below.

```{r}
sessionInfo()
```


